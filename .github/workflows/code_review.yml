name: Code Review with ChatGPT

on:
  pull_request:
    branches:
      - main

jobs:
  code_review:
    runs-on: ubuntu-latest
    permissions:
      issues: write
      pull-requests: write
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 16

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: .yarn/cache
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Get changed files
        id: changed_files
        run: |
          echo "Base commit: ${{ github.event.pull_request.base.sha }}"
          echo "Head commit: ${{ github.event.pull_request.head.sha }}"
          echo "::set-output name=files::$(git diff --name-only --diff-filter=d ${{ github.event.pull_request.base.sha }} ${{ github.event.pull_request.head.sha }})"

      - name: Code Review with ChatGPT
        id: code_review
        run: |
          echo "::set-output name=reviews::$(node code_review.js ${{ steps.changed_files.outputs.files }})"
          echo "리뷰 결과: "
          echo ${{ steps.code_review.outputs.reviews }}
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

      - name: Add Code Review Comment
        uses: actions/github-script@v5
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const reviews = JSON.parse(process.env.REVIEWS);
            console.log("파싱된 리뷰: ", reviews);
            const reviewText = Object.entries(reviews).map(([file, review]) => `File: ${file}\n\n${review}`).join('\n\n');
            const reviewComment = `Code Review 결과:\n\n${reviewText}\n`;
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: reviewComment
            });
        env:
          REVIEWS: ${{ steps.code_review.outputs.reviews }}
